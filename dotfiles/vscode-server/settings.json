{
  // workbench
  "workbench.colorTheme": "Default Dark+",
  "workbench.editor.enablePreview": false,
  "workbench.editorLargeFileConfirmation": 3072,
  "workbench.startupEditor": "none",

  // terminal
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell"
    },
    "Command Prompt": {
      "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
      ],
      "args": [],
      "icon": "terminal-cmd"
    },
    "Git Bash": {
      "source": "Git Bash"
    },
    "Ubuntu (WSL)": {
      "path": "C:\\windows\\System32\\wsl.exe",
      "args": [
        "-d",
        "Ubuntu"
      ]
    }
  },
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.scrollback": 5000,

  // editor
  "editor.copyWithSyntaxHighlighting": false,
  "editor.formatOnSave": false,
  "editor.unicodeHighlight.nonBasicASCII": false,

  // remote
  "remote.autoForwardPortsSource": "hybrid",

  // files.associations 
  "files.associations": {
    // sql
    "*.sql": "jinja-sql",
    // dbt - don't format models in `target/` dir
    "**/target/**": "",
  },

  // json
  "[json][jsonc]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
  },
	"json.schemas": [
    {
      "fileMatch": ["*.json"],
		  "schema": {
			  "allowTrailingCommas": true
		  }
	  }
  ],

  // yaml
  "[yaml]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.defaultFormatter": "redhat.vscode-yaml",
    "editor.formatOnSave": true,
    "format.enable": true,
    "schemas": {
      //////////////
      // dbt
      //////////////
      "https://raw.githubusercontent.com/dbt-labs/dbt-jsonschema/main/schemas/dbt_yml_files.json": [
        "/**/models/**/*.yml",
        "!profiles.yml",
        "!dbt_project.yml",
        "!packages.yml",
        "!package-lock.yml",
        "!selectors.yml",
        "!profile_template.yml",
        "!deployment.yml",
      ],
      // add: $defs.model_configs.properties.+snowflake_warehouse
      "~/dotfiles/.configs/.json-schemas/dbt_project.json": [
        "dbt_project.yml"
      ],
      "https://raw.githubusercontent.com/dbt-labs/dbt-jsonschema/main/schemas/selectors.json": [
        "selectors.yml"
      ],
      "https://raw.githubusercontent.com/dbt-labs/dbt-jsonschema/main/schemas/packages.json": [
        "packages.yml"
      ],
    },
  },
  "yaml.customTags": [
    // Cloud Formation
    // https://github.com/redhat-developer/vscode-yaml/issues/669
    "!Base64 scalar",
    "!Cidr scalar",
    "!And sequence",
    "!Equals sequence",
    "!If sequence",
    "!Not sequence",
    "!Or sequence",
    "!Condition scalar",
    "!FindInMap sequence",
    "!GetAtt sequence",
    "!GetAtt scalar",
    "!GetAZs scalar",
    "!ImportValue scalar",
    "!Join sequence",
    "!Select sequence",
    "!Split sequence",
    "!Sub scalar",
    "!Transform mapping",
    "!Ref scalar",
  ],

  // markdown
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
  },

  // sql
  "[sql]": {
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
  },

  // shellscript
  "[shellscript]": {
    "editor.tabSize": 4,
    "editor.insertSpaces": false,
    "editor.defaultFormatter": "foxundermoon.shell-format",
    "editor.formatOnSave": true,
  },

  // Makefile
  "[makefile]": {
    "editor.tabSize": 4,
    "editor.insertSpaces": false,
  },

  // hadolint
  "hadolint.hadolintPath": "hadolint",
  "hadolint.cliOptions": [],
  "hadolint.maxNumberOfProblems": 100,
  "hadolint.outputLevel": "warning",

  // Docker Compose
  "[Compose]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.defaultFormatter": "ms-azuretools.vscode-docker",
    "editor.formatOnSave": true,
  },

  // Terraform
  "[terraform]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file"
  },
  "[terraform-vars]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file"
  },

  // Python
  "[python]": {
    "defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
    "editor.defaultFormatter": "charliermarsh.ruff",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    }
  },
  "python.languageServer": "Pylance",
  "python.analysis.typeCheckingMode": "basic",
  "ruff.format.args": ["--config", "line-length=120"],

  // typescript
  "[typescript]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
  },

  // golang
  "[go]": {
      "editor.tabSize": 4,
      "editor.insertSpaces": false,
      "editor.formatOnSave": true,
      "editor.defaultFormatter": "golang.go"
  },
  "gopls": {
    "ui.semanticTokens": true
  },

  ////////////////////////////////////////////
  // extensions
  ////////////////////////////////////////////

  // cSpell
  "cSpell.enabled": true,
  "cSpell.customDictionaries": {
    "common": {
      "name": "common",
      "path": "~/dotfiles/.configs/.cspell/common.txt",
      "addWords": true,
    },
    "aws": {
      "name": "aws",
      "path": "~/dotfiles/.configs/.cspell/aws.txt",
      "addWords": true,
    },
    "python": {
      "name": "python",
      "path": "~/dotfiles/.configs/.cspell/python.txt",
      "addWords": true,
    },
    "go": {
      "name": "go",
      "path": "~/dotfiles/.configs/.cspell/go.txt",
      "addWords": true,
    },
    "sql": {
      "name": "sql",
      "path": "~/dotfiles/.configs/.cspell/sql.txt",
      "addWords": true,
    },
    "cloud-init": {
      "name": "cloud-init",
      "path": "~/dotfiles/.configs/.cspell/cloud-init.txt",
      "addWords": true,
    },
    "custom": true,
    "internal-terms": true,
  },

  // makefile
  "makefile.makePath": "/usr/bin/make",
  "makefile.launchConfigurations": [],

  // shellcheck
  "shellcheck.enable": true,
  "shellcheck.enableQuickFix": true,
  "shellcheck.run": "onSave",
  "shellcheck.executablePath": "", // Priority: user defined > bundled shellcheck binary > "shellcheck"
  "shellcheck.exclude": [],
  "shellcheck.customArgs": [],
  "shellcheck.ignorePatterns": {
    "**/.bashrc": true,
    "**/.profile": true,
  },

  // eslint
  "eslint.enable": true,
  "eslint.validate": [
    "typescript",
  ],
  "editor.codeActionsOnSave": {
    "source.addMissingImports": "always",
    "source.fixAll": "never",
    "source.fixAll.eslint": "explicit",
  },

  // sqlfluff
  "sqlfluff.executablePath": "${workspaceFolder}/.venv/bin/sqlfluff",
  "sqlfluff.config": "~/dotfiles/.configs/.sqlfluff/.sqlfluff",
  "sqlfluff.linter.run": "onSave",

  // dbt Power User
  "dbt.queryLimit": 5,

  // AWS Toolkit
  "aws.codeWhisperer.importRecommendation": false,
  "aws.codeWhisperer.includeSuggestionsWithCodeReferences": false,
  "aws.telemetry": false,

  "redhat.telemetry.enabled": false,
}
